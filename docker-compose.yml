# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:

  auth:
    image: auth
    build:
      context: .
      dockerfile: Auth/Dockerfile
    ports:
      - 4001:4001
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
  api:
    image: api
    build:
      context: .
      dockerfile: Api/Dockerfile
    ports:
      - 4002:4002
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./volumes/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    # restart: unless-stopped
    depends_on:
      - cadvisor
    ports:
      - 9090:9090
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8000:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./volumes/grafana/dashboards:/var/lib/grafana/dashboards
      - ./volumes/grafana/provisioning:/etc/grafana/provisioning
      - ./volumes/grafana/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./volumes/grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    # restart: unless-stopped
    ports:
      - 3000:3000
  influxdb:
    image: influxdb:1.0-alpine
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=croco
      - DOCKER_INFLUXDB_INIT_PASSWORD=password1
      - DOCKER_INFLUXDB_INIT_ORG=k6io
      - DOCKER_INFLUXDB_INIT_BUCKET=demo
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=EEKpryGZk8pVDXmIuy484BKUxM5jOEDv7YNoeNZUbsNbpbPbP6kK_qY9Zsyw7zNnlZ7pHG16FYzNaqwLMBUz8g==
  k6:
    image: grafana/k6:latest
    container_name: k6
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086
      - K6_INFLUXDB_ORGANIZATION=k6io
      - K6_INFLUXDB_BUCKET=demo
      - K6_INFLUXDB_INSECURE=true
        # NOTE: This is an Admin token, it's not suggested to use this configuration in production.
        # Instead, use a Token with restricted privileges.
      - K6_INFLUXDB_TOKEN=EEKpryGZk8pVDXmIuy484BKUxM5jOEDv7YNoeNZUbsNbpbPbP6kK_qY9Zsyw7zNnlZ7pHG16FYzNaqwLMBUz8g==
    volumes:
      - ./volumes/k6:/scripts
volumes:
  dbvolume:
    driver: local
  certs:
    driver: local
  prometheus_data: {}
  grafana_data: {}
